/*
 * Copyright(c) 1995 - 2018 T-Systems Multimedia Solutions GmbH
 * Riesaer Str. 5, 01129 Dresden
 * All rights reserved.
 *
 * My Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the openapi-typescript-angular-generator.
 * https://github.com/T-Systems-MMS/openapi-typescript-angular-generator
 * Do not edit the class manually.
 */

import { ValidatorFn, Validators } from '@angular/forms';
import { BaseFormControlFactory } from 'openapi-typescript-angular-generator';



export interface RegisterModel { 
    username: string;
    email: string;
    password: string;
}

/**
 * Namespace for property- and property-value-enumerations of RegisterModel.
 */
export namespace RegisterModel {
    /**
     * All properties of RegisterModel.
     */
    export enum Properties {
        username = 'username',
        email = 'email',
        password = 'password'
    }

    /**
    * A map of tuples with error name and `ValidatorFn` for each property of RegisterModel.
    */
    export const ModelValidators: {[K in keyof RegisterModel]: [string, ValidatorFn][]} = {
        username: [
                ['required', Validators.required],
                ['minlength', Validators.minLength(1)],
        ],
        email: [
                ['required', Validators.required],
                ['minlength', Validators.minLength(1)],
        ],
        password: [
                ['required', Validators.required],
                ['minlength', Validators.minLength(1)],
        ],
    };

    /**
    * The FormControlFactory for RegisterModel.
    */
    export class FormControlFactory extends BaseFormControlFactory<RegisterModel> {

        /**
         * Constructor.
         *
         * @param model An existing model for RegisterModel.
         *              If given, all form-controls of the factory automatically have the value of this model. If this
         *              model is not given, all values are `null`.
         */
        constructor(
          model: RegisterModel = {
            username: null,
            email: null,
            password: null,
          }
        ) {
            super(model, RegisterModel.ModelValidators);
        }
    }

}


